shiny::runApp()
runApp()
runApp()
runApp()
server <- function(input, output, session){
#sets up the message menu for the comments
output$messageMenu <- renderMenu({
msgs <- apply(messageData, 1, function(row) {
messageItem(from = row[["from"]], message = row[["message"]], time = row[["datetime"]])
})
dropdownMenu(type = "messages", .list = msgs)
})
#sets up the values for the tasks menu
output$tasks <- renderMenu({
nsgs <- apply(percent, 1, function(row){
taskItem(value = row[["percent"]], text = "Percent Complete", color = colorizer)
})
dropdownMenu(type = "tasks", .list = nsgs, badgeStatus = badgestats)
})
#outputs a graph based on the date inputs in the sidebar
output$dateRange <- renderPlot(ggplot(over_time_complete %>% filter(Date >= input$dates[1] & Date <= input$dates[2]), aes(Date, cumsum(count)))+scale_x_date(date_labels = '%Y-%m-%d',date_breaks = "1 week")+theme(axis.text.x = element_text(angle = 90, hjust = 1))+geom_line(aes(group=1),color="red",size=0.5)+geom_text(aes(label=cumsum(count)), check_overlap = TRUE,nudge_x = 0, nudge_y = 0)+labs(title = "Completed by Day TT", x = 'Date',y = 'Completed'))
value = reactive({
input$Update
round(runif(1,0,100),2)
})
output$gauge1 <- renderC3Gauge({
C3Gauge(value())
})
observeEvent(input$jsValue,{
cat("\nyou clicked on a pie with pie slice data:", input$jsValue)
})
}
runApp()
runApp()
runApp()
devtools::install()
helpFiles <- dir("help","csv")
helpNames <- lapply(helpFiles,function(x){substr(x,0,nchar(x)-4)})
helpData <- list()
nHelpFiles <- length(helpFiles)
source('C:/Users/lblakely/Downloads/dashboard_showcase-master/app/initHelp.R', echo=TRUE)
rm(helpData, helpNames, helpFile, helpFiles, i, nHelpFiles)
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
shiny::runApp()
library(plyr)
install.packages('plyr')
install.packages("plyr_1.8.4.zip", repos = NULL, type = "source")
source('~/HDWDashboard/Packages/install.R', echo=TRUE)
install.packages("shiny")
install.packages("shinydashboard")
install.packages("shinyjs")
install.packages("readxl")
install.packages("shiny")
install.packages("shinydashboard")
install.packages("shinyjs")
install.packages("readxl")
install.packages('Rtools')
install.packages("plyr_1.8.4.zip", repos = NULL, type = "source")
source('~/HDWDashboard/Packages/install.R', echo=TRUE)
install.packages("shiny")
install.packages("shinydashboard")
install.packages("shinyjs")
install.packages("readxl")
install.packages("shiny")
install.packages("shinydashboard")
install.packages("shinyjs")
install.packages("readxl")
install.packages("readxl")
install.packages("plyr_1.8.4.zip",type = "source")
install.packages('plyr')
install.packages('dplyr')
runApp()
library(C3)
source('~/HDWDashboard/Packages/install.R', echo=TRUE)
